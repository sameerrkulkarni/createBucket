service: sThreeBucket
provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1
  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'
functions:
  uploadFile:
    handler: api.handle
    role: newRoleCreate
    events:
      - http:
          method: post
          path: upload
          cors: true
resources:
  Resources:
    MyServerlessExampleBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: serverless-s8-bucket
    # Define an IAM role for the Lambda function
    MyLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: MyLambdaRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole' # Add any additional managed policies if needed

    # Attach the policy to the Lambda role
    UploadFilePolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: UploadObjects
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: S3PutObjects
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectTagging
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: MyServerlessExampleBucket
                    - "/*"
        Roles:
          - newRoleCreate # Reference the IAM role created for the Lambda function
